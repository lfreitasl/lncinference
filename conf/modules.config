/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: RAW_READLENDISTRIBUTION {
        publishDir = [
            path: { "${params.outdir}/readlendistribution/raw_reads" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FILT_READLENDISTRIBUTION {
        publishDir = [
            path: { "${params.outdir}/readlendistribution/filt_reads" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: RAW_FASTQC {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/fastqc/raw_reads" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: FILT_FASTQC {
        ext.args = '--quiet'
        ext.prefix = { "filtered_${meta.id}" }
        publishDir = [
            path: { "${params.outdir}/fastqc/filt_reads" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: RAW_NANOPLOT {
        ext.args   = { "--no_static --info_in_report --prefix ${meta.id}" }
        publishDir = [
            path: { "${params.outdir}/nanoplot/raw_reads" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FILT_NANOPLOT {
        ext.args   = { "--no_static --info_in_report --prefix filt_${meta.id}" }
        publishDir = [
            path: { "${params.outdir}/nanoplot/filt_reads" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: MINIMAP2_ALIGN {
        ext.args   = "-ax splice"
        publishDir = [
            path: { "${params.outdir}/minimap2" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: NANOFILT {
        ext.prefix = { "filtered_${meta.id}.fastq.gz" }
        publishDir = [
            path: { "${params.outdir}/nanofilt" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: SAMTOOLS_QMAPFILT {
        ext.prefix = { "qmapfilt_${meta.id}.bam" }
        publishDir = [
            path: { "${params.outdir}/samtools" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: STRINGTIE_ASSEMBLY {
        publishDir = [
            path: { "${params.outdir}/stringtie/assembly" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: STRINGTIE_MERGE {
        publishDir = [
            path: { "${params.outdir}/stringtie" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: GFFCOMPARE {
        publishDir = [
            path: { "${params.outdir}/gffcompare" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: GFFREAD {
        ext.args   = "-w"
        publishDir = [
            path: { "${params.outdir}/gffread" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: RNAMINING {
        publishDir = [
            path: { "${params.outdir}/rnamining" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
